/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import com.github.ajalt.clikt.core.CliktCommand
import com.github.ajalt.clikt.core.main
import com.github.ajalt.clikt.core.subcommands
import com.github.ajalt.clikt.parameters.options.option
import com.github.ajalt.clikt.parameters.options.required
import com.github.ajalt.clikt.parameters.types.file
import com.github.ajalt.clikt.parameters.types.int

class KolibriChannels : CliktCommand(name = "list-channels") {
    override fun run() = echo("TODO list all available channels")
}

class KolibriTopics : CliktCommand(name = "list-topics") {
    override val printHelpOnEmptyArgs = true

    val channelId by option("-channel-id", help = "The ID of the channel to list topics for").required()
    val maxDepth by option("-r","--max-depth",help = "Maximum depth for recursive listing").int()

    override fun run() = echo("TODO list topics for a kolibri channel $channelId")

}

class DownloadTopic : CliktCommand(name = "download-topic") {
    override val printHelpOnEmptyArgs = true

    val channelId by option("-channel-id", help = "The channel ID").required()
    val topicId by option("-topic-id", help = "The topic ID to download").required()
    val output by option("-output",help = "The output directory for the xApi file").file(canBeFile = false, mustBeWritable = true)
    val fileName by option("-name",help = "The name of the xApi file")


    override fun run() = echo("TODO download the topic $topicId from channel $channelId in $output as $fileName")
}

class Khan2Xapi : CliktCommand(name = "khan") {
    override val printHelpOnEmptyArgs = true
    override fun run() = Unit
}

fun main(args: Array<String>) {
    Khan2Xapi()
        .subcommands(
            KolibriChannels(),
            KolibriTopics(),
            DownloadTopic()
        )
        .main(args)
}
